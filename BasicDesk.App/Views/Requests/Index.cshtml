@model RequestSortingViewModel
@using X.PagedList;
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Index";
}

<h3 class="text-center text-info">Requests</h3>
<div>
    <div class="btn-group btn-group-toggle">
        <a asp-area="" asp-controller="Requests" class="btn btn-success" asp-action="Index" asp-route-currentFilter="MyOpen">My Open Requests</a>
        <a asp-area="" asp-controller="Requests" class="btn btn-success" asp-action="Index" asp-route-currentFilter="MyClosed">My Closed Requests</a>
        <a asp-controller="Requests" asp-action="Index" class="btn btn-success">View All Requests</a>
    </div>
    <form asp-controller="Requests" asp-action="Index" method="get" class="pull-right input-group">
        <input class="text-right " type="text" placeholder="Search" name="SearchString" value="@Model.CurrentSearch" />
        <button class="btn btn-default">Search</button>
    </form>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.IdSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].Id)
                </a>
            </th>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].Requester)
                </a>
            </th>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.SubjectSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].Subject)
                </a>
            </th>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.AssignedToSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].AssignedTo)
                </a>
            </th>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.StartDateSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].StartTime)
                </a>
            </th>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.StatusSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].Status)
                </a>
            </th>
            <th>
                <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.EndDateSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                    @Html.DisplayNameFor(model => model.RequestViews[0].Endtime)
                </a>
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.RequestViews)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Requester)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subject)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssignedTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Endtime)
                </td>
                <td>
                    <a asp-area="" asp-controller="Requests" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var sortOrder = Model.CurrentSort;
    var searchString = Model.CurrentSearch;
    var currentFilter = Model.CurrentFilter;
}

@Html.PagedListPager(Model.RequestViews, page => Url.Action("Index", "Requests", new {sortOrder, searchString, currentFilter, page }))
